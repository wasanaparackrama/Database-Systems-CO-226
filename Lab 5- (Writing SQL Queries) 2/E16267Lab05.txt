/* A New Database for lab 05 is created*/

mysql: [Warning] F:\bin\mysql.exe: ignoring option '--no-beep' due to invalid value ''.
Enter password: ********
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.0.19 MySQL Community Server - GPL

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> create database E16267Lab05;
Query OK, 1 row affected (0.94 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| e16267lab0         |
| e16267lab02        |
| e16267lab05        |
| information_schema |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
9 rows in set (1.08 sec)

mysql> use E16267Lab05;
Database changed
mysql> CREATE TABLE MOVIE
    -> (MOVIE_ID INT AUTO_INCREMENT,
    -> Title VARCHAR(25),
    -> Year YEAR,
    -> Directer VARCHAR(25),
    -> PRIMARY KEY (MOVIE_ID));
Query OK, 0 rows affected (1.11 sec)

mysql> ALTER table MOVIE AUTO_INCREMENT=101;
Query OK, 0 rows affected (0.33 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> show tables;
+-----------------------+
| Tables_in_e16267lab05 |
+-----------------------+
| movie                 |
+-----------------------+
1 row in set (0.19 sec)

mysql> describe MOVIE;
+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| MOVIE_ID | int         | NO   | PRI | NULL    | auto_increment |
| Title    | varchar(25) | YES  |     | NULL    |                |
| Year     | year        | YES  |     | NULL    |                |
| Directer | varchar(25) | YES  |     | NULL    |                |
+----------+-------------+------+-----+---------+----------------+
4 rows in set (0.10 sec)

mysql> Insert into MOVIE(Title,Year,Directer)
    -> Values
    ->  ('Gone with the Wind',1939,'Victor Fleming'),
    -> ('Star Wars',1977,'George Lucas'),
    -> ('The Sound of Music',1965,'Robert Wise'),
    -> ('E.T.',1982,'Steven Spieibrg'),
    -> ('Titanic',1997,'James Cameron'),
    -> ('Snow White',1937,NULL),
    -> ('Avatar',2009,'James Cameron'),
    -> ('Raiders of the Lost Ark',1981,'Steven Spielberg');
Query OK, 8 rows affected (0.41 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from MOVIE;
+----------+-------------------------+------+------------------+
| MOVIE_ID | Title                   | Year | Directer         |
+----------+-------------------------+------+------------------+
|      101 | Gone with the Wind      | 1939 | Victor Fleming   |
|      102 | Star Wars               | 1977 | George Lucas     |
|      103 | The Sound of Music      | 1965 | Robert Wise      |
|      104 | E.T.                    | 1982 | Steven Spieibrg  |
|      105 | Titanic                 | 1997 | James Cameron    |
|      106 | Snow White              | 1937 | NULL             |
|      107 | Avatar                  | 2009 | James Cameron    |
|      108 | Raiders of the Lost Ark | 1981 | Steven Spielberg |
+----------+-------------------------+------+------------------+
8 rows in set (0.00 sec)

mysql> CREATE TABLE REVIEWER
    -> (Reviewer_ID INT AUTO_INCREMENT PRIMARY KEY,
    -> Reviewer_Name VARCHAR(25));
Query OK, 0 rows affected (0.66 sec)


mysql> create table RATING
    -> (Reviewer_ID INT(3) NOT NULL,
    -> Movie_ID INT(3) NOT NULL,
    -> stars INT,
    -> Rating_Date DATE,
    -> FOREIGN KEY (Reviewer_ID) REFERENCES REVIEWER(Reviewer_ID) on delete cascade on update cascade,
    -> FOREIGN KEY (Movie_ID) REFERENCES MOVIE(Movie_ID) on delete cascade on update cascade);
Query OK, 0 rows affected, 2 warnings (0.92 sec)

mysql> show tables;
+-----------------------+
| Tables_in_e16267lab05 |
+-----------------------+
| movie                 |
| rating                |
| reviewer              |
+-----------------------+
3 rows in set (0.00 sec)

mysql> describe REVIEWER;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| Reviewer_ID   | int         | NO   | PRI | NULL    | auto_increment |
| Reviewer_Name | varchar(25) | YES  |     | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
2 rows in set (0.00 sec)

mysql> describe RATING;
+-------------+------+------+-----+---------+-------+
| Field       | Type | Null | Key | Default | Extra |
+-------------+------+------+-----+---------+-------+
| Reviewer_ID | int  | NO   | MUL | NULL    |       |
| Movie_ID    | int  | NO   | MUL | NULL    |       |
| stars       | int  | YES  |     | NULL    |       |
| Rating_Date | date | YES  |     | NULL    |       |
+-------------+------+------+-----+---------+-------+
4 rows in set (0.00 sec)

mysql> alter table REVIEWER AUTO_INCREMENT=201;
Query OK, 0 rows affected (0.31 sec)
Records: 0  Duplicates: 0  Warnings: 0


mysql> insert into REVIEWER (Reviewer_Name)
    -> values
    -> ('Sarah Martinez'),
    -> ('Daniel Lewis'),
    -> ('Brittany Harris'),
    -> ('Mike Anderson'),
    -> ('Chris Jackson'),
    ->  ('Elizabeth Thomas'),
    -> ('James Cameron'),
    -> ('Ashley White');
Query OK, 8 rows affected (0.19 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from Reviewer;
+-------------+------------------+
| Reviewer_ID | Reviewer_Name    |
+-------------+------------------+
|         201 | Sarah Martinez   |
|         202 | Daniel Lewis     |
|         203 | Brittany Harris  |
|         204 | Mike Anderson    |
|         205 | Chris Jackson    |
|         206 | Elizabeth Thomas |
|         207 | James Cameron    |
|         208 | Ashley White     |
+-------------+------------------+
8 rows in set (0.00 sec)


mysql> insert into RATING
    -> Values
    -> (201,101,2,'2011-01-22'),
    ->      (201,101,4,'2011-01-27'),
    ->      (202,106,4,NULL),
    ->      (203,103,2,'2011-01-20'),
    ->      (203,108,4,'2011-01-12'),
    ->      (203,108,2,'2011-01-30'),
    ->      (204,101,3,'2011-01-09'),
    ->      (205,103,3,'2011-01-27'),
    ->      (205,104,2,'2011-01-22'),
    ->      (205,108,4,NULL),
    ->      (206,107,3,'2011-01-15'),
    ->      (206,106,5,'2011-01-19'),
    ->      (207,107,5,'2011-01-20'),
    ->      (208,104,3,'2011-01-02');
Query OK, 14 rows affected (0.24 sec)
Records: 14  Duplicates: 0  Warnings: 0

mysql> select * from Rating;
+-------------+----------+-------+-------------+
| Reviewer_ID | Movie_ID | stars | Rating_Date |
+-------------+----------+-------+-------------+
|         201 |      101 |     2 | 2011-01-22  |
|         201 |      101 |     4 | 2011-01-27  |
|         202 |      106 |     4 | NULL        |
|         203 |      103 |     2 | 2011-01-20  |
|         203 |      108 |     4 | 2011-01-12  |
|         203 |      108 |     2 | 2011-01-30  |
|         204 |      101 |     3 | 2011-01-09  |
|         205 |      103 |     3 | 2011-01-27  |
|         205 |      104 |     2 | 2011-01-22  |
|         205 |      108 |     4 | NULL        |
|         206 |      107 |     3 | 2011-01-15  |
|         206 |      106 |     5 | 2011-01-19  |
|         207 |      107 |     5 | 2011-01-20  |
|         208 |      104 |     3 | 2011-01-02  |
+-------------+----------+-------+-------------+
14 rows in set (0.00 sec)

mysql>
/////////////////////////////////////////////////////////////Answers//////////////////////////////////////////////////////////////////////////////////////////////////////////


1.
a)
mysql> SELECT * FROM MOVIE m
    -> WHERE m.Directer IN(
    -> SELECT r.Reviewer_Name FROM REVIEWER r);
+----------+---------+------+---------------+
| MOVIE_ID | Title   | Year | Directer      |
+----------+---------+------+---------------+
|      105 | Titanic | 1997 | James Cameron |
|      107 | Avatar  | 2009 | James Cameron |
+----------+---------+------+---------------+
2 rows in set (0.00 sec)


b)
mysql> SELECT * FROM MOVIE
    -> WHERE Directer NOT IN(
    -> SELECT Reviewer_Name FROM REVIEWER
    -> WHERE Directer =Reviewer_Name);
+----------+-------------------------+------+------------------+
| MOVIE_ID | Title                   | Year | Directer         |
+----------+-------------------------+------+------------------+
|      101 | Gone with the Wind      | 1939 | Victor Fleming   |
|      102 | Star Wars               | 1977 | George Lucas     |
|      103 | The Sound of Music      | 1965 | Robert Wise      |
|      104 | E.T.                    | 1982 | Steven Spieibrg  |
|      106 | Snow White              | 1937 | NULL             |
|      108 | Raiders of the Lost Ark | 1981 | Steven Spielberg |
+----------+-------------------------+------+------------------+
6 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

2.
a)
mysql> select * from RATING
    ->  where Reviewer_ID in
    -> (select Reviewer_ID from REVIEWER where Reviewer_Name="Sarah Martinez");
+-------------+----------+-------+-------------+
| Reviewer_ID | Movie_ID | stars | Rating_Date |
+-------------+----------+-------+-------------+
|         201 |      101 |     2 | 2011-01-22  |
|         201 |      101 |     4 | 2011-01-27  |
+-------------+----------+-------+-------------+
2 rows in set (0.00 sec)

b)
mysql> select * from RATING
    ->  where Reviewer_ID not in
    -> (select Reviewer_ID from REVIEWER where Reviewer_Name="Sarah Martinez");
+-------------+----------+-------+-------------+
| Reviewer_ID | Movie_ID | stars | Rating_Date |
+-------------+----------+-------+-------------+
|         202 |      106 |     4 | NULL        |
|         203 |      103 |     2 | 2011-01-20  |
|         203 |      108 |     4 | 2011-01-12  |
|         203 |      108 |     2 | 2011-01-30  |
|         204 |      101 |     3 | 2011-01-09  |
|         205 |      103 |     3 | 2011-01-27  |
|         205 |      104 |     2 | 2011-01-22  |
|         205 |      108 |     4 | NULL        |
|         206 |      107 |     3 | 2011-01-15  |
|         206 |      106 |     5 | 2011-01-19  |
|         207 |      107 |     5 | 2011-01-20  |
|         208 |      104 |     3 | 2011-01-02  |
+-------------+----------+-------+-------------+
12 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

3.
A)
mysql>  SELECT Movie_ID from RATING
    -> WHERE stars < ANY(
    -> SELECT stars FROM RATING WHERE MOVIE_ID=103) and Movie_ID!=103;
+----------+
| Movie_ID |
+----------+
|      101 |
|      108 |
|      104 |
+----------+
3 rows in set (0.00 sec)

B)

mysql>  SELECT DISTINCT Movie_ID from RATING
    -> WHERE stars <= ANY(
    -> SELECT stars FROM RATING WHERE MOVIE_ID=103) and Movie_ID!=103;
+----------+
| Movie_ID |
+----------+
|      101 |
|      104 |
|      107 |
|      108 |
+----------+
4 rows in set (0.00 sec)

C)
mysql> SELECT DISTINCT Movie_ID from RATING
    -> WHERE stars = ANY(
    -> SELECT stars FROM RATING WHERE MOVIE_ID=103) and Movie_ID!=103;
+----------+
| Movie_ID |
+----------+
|      101 |
|      108 |
|      104 |
|      107 |
+----------+
4 rows in set (0.00 sec)

D)
mysql>  SELECT DISTINCT Movie_ID from RATING
    -> WHERE stars > ANY(
    -> SELECT stars FROM RATING WHERE MOVIE_ID=103) and Movie_ID!=103;
+----------+
| Movie_ID |
+----------+
|      101 |
|      104 |
|      106 |
|      107 |
|      108 |
+----------+
5 rows in set (0.00 sec)

E)
mysql> SELECT DISTINCT Movie_ID from RATING
    -> WHERE stars >= ANY(
    -> SELECT stars FROM RATING WHERE MOVIE_ID=103) and Movie_ID!=103;
+----------+
| Movie_ID |
+----------+
|      101 |
|      104 |
|      106 |
|      107 |
|      108 |
+----------+
5 rows in set (0.00 sec)

F)
mysql> SELECT DISTINCT Movie_ID from RATING
    ->  WHERE stars not in(
    -> SELECT stars FROM RATING WHERE MOVIE_ID=103);
+----------+
| Movie_ID |
+----------+
|      101 |
|      106 |
|      107 |
|      108 |
+----------+
4 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

4.

mysql> SELECT Reviewer_ID from Rating
    -> where Movie_ID IN (
    -> select Movie_ID from Rating where Rating_Date="2011-01-12")
    -> AND stars IN(select stars from Rating where Rating_Date="2011-01-12");
+-------------+
| Reviewer_ID |
+-------------+
|         203 |
|         205 |
+-------------+
2 rows in set (0.00 sec)


*******************************************************************************************************************************************************************

5.
A)

mysql> select distinct year from Movie,Rating
    -> where Movie.Movie_ID=Rating.Movie_ID AND (Rating.stars=4 OR Rating.stars=5)
    -> ORDER BY year ASC;
+------+
| year |
+------+
| 1937 |
| 1939 |
| 1981 |
| 2009 |
+------+
4 rows in set (0.00 sec)

B)
mysql> SELECT year FROM movie
    -> WHERE Movie_ID IN(SELECT Movie_ID from Rating where stars=4 OR stars=5)
    -> ORDER BY year ASC;
+------+
| year |
+------+
| 1937 |
| 1939 |
| 1981 |
| 2009 |
+------+
4 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

6.
A)
mysql> SELECT Title FROM Movie
    -> WHERE Movie_ID NOT IN
    -> (SELECT Movie_ID FROM Rating);
+-----------+
| Title     |
+-----------+
| Star Wars |
| Titanic   |
+-----------+
2 rows in set (0.05 sec)

B)
mysql> SELECT Title FROM Movie t1
    -> WHERE Movie_ID <> ALL
    -> (SELECT Movie_ID FROM Rating t2 WHERE t1.Movie_ID=t2.Movie_ID);
+-----------+
| Title     |
+-----------+
| Star Wars |
| Titanic   |
+-----------+
2 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

7.
A)
mysql> SELECT Reviewer_Name FROM Reviewer,Rating
    -> WHERE Rating.Reviewer_ID=Reviewer.Reviewer_ID AND
    -> Rating.Rating_Date IS NULL;
+---------------+
| Reviewer_Name |
+---------------+
| Daniel Lewis  |
| Chris Jackson |
+---------------+
2 rows in set (0.00 sec)

B)
mysql> SELECT Reviewer_Name FROM Reviewer
    -> WHERE Reviewer_ID IN
    -> (SELECT Reviewer_ID FROM Rating WHERE Rating_Date IS NULL);
+---------------+
| Reviewer_Name |
+---------------+
| Daniel Lewis  |
| Chris Jackson |
+---------------+
2 rows in set (0.00 sec)

C)
mysql> SELECT Reviewer_Name FROM Reviewer r1
    -> WHERE Reviewer_ID =ANY(
    -> SELECT  Reviewer_ID FROM Rating r2 WHERE Rating_Date IS NULL AND
    -> r1. Reviewer_ID=r2. Reviewer_ID);
+---------------+
| Reviewer_Name |
+---------------+
| Daniel Lewis  |
| Chris Jackson |
+---------------+
2 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

8.
A)
mysql> SELECT Title,MAX(stars) FROM Movie,Rating
    -> WHERE Movie.Movie_ID=Rating.Movie_ID
    -> GROUP BY Movie.Movie_ID
    -> ORDER BY Movie.Title;
+-------------------------+------------+
| Title                   | MAX(stars) |
+-------------------------+------------+
| Avatar                  |          5 |
| E.T.                    |          3 |
| Gone with the Wind      |          4 |
| Raiders of the Lost Ark |          4 |
| Snow White              |          5 |
| The Sound of Music      |          3 |
+-------------------------+------------+
6 rows in set (0.06 sec)

B)
mysql> SELECT Title,MIN(stars) FROM Movie,Rating
    -> WHERE Movie.Movie_ID=Rating.Movie_ID
    -> GROUP BY Movie.Movie_ID
    -> ORDER BY Movie.Title;
+-------------------------+------------+
| Title                   | MIN(stars) |
+-------------------------+------------+
| Avatar                  |          3 |
| E.T.                    |          2 |
| Gone with the Wind      |          2 |
| Raiders of the Lost Ark |          2 |
| Snow White              |          4 |
| The Sound of Music      |          2 |
+-------------------------+------------+
6 rows in set (0.00 sec)

C)
mysql> SELECT Title,AVG(stars) FROM Movie,Rating
    -> WHERE Movie.Movie_ID=Rating.Movie_ID
    -> GROUP BY Movie.Movie_ID
    -> ORDER BY Movie.Title;
+-------------------------+------------+
| Title                   | AVG(stars) |
+-------------------------+------------+
| Avatar                  |     4.0000 |
| E.T.                    |     2.5000 |
| Gone with the Wind      |     3.0000 |
| Raiders of the Lost Ark |     3.3333 |
| Snow White              |     4.5000 |
| The Sound of Music      |     2.5000 |
+-------------------------+------------+
6 rows in set (0.10 sec)

D)
mysql> SELECT Title,SUM(stars) FROM Movie,Rating
    -> WHERE Movie.Movie_ID=Rating.Movie_ID
    -> GROUP BY Movie.Movie_ID
    -> ORDER BY Movie.Title;
+-------------------------+------------+
| Title                   | SUM(stars) |
+-------------------------+------------+
| Avatar                  |          8 |
| E.T.                    |          5 |
| Gone with the Wind      |          9 |
| Raiders of the Lost Ark |         10 |
| Snow White              |          9 |
| The Sound of Music      |          5 |
+-------------------------+------------+
6 rows in set (0.00 sec)

E)
mysql> SELECT Title,COUNT(stars) FROM Movie,Rating
    -> WHERE Movie.Movie_ID=Rating.Movie_ID
    -> GROUP BY Movie.Movie_ID
    -> ORDER BY Movie.Title;
+-------------------------+--------------+
| Title                   | COUNT(stars) |
+-------------------------+--------------+
| Avatar                  |            2 |
| E.T.                    |            2 |
| Gone with the Wind      |            3 |
| Raiders of the Lost Ark |            3 |
| Snow White              |            2 |
| The Sound of Music      |            2 |
+-------------------------+--------------+
6 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

9)
A)
mysql> SELECT Reviewer_Name FROM Reviewer,Rating
    -> WHERE Rating.Reviewer_ID=Reviewer.Reviewer_ID
    -> GROUP BY Rating.Reviewer_ID
    -> HAVING COUNT(*) >=3;
+-----------------+
| Reviewer_Name   |
+-----------------+
| Brittany Harris |
| Chris Jackson   |
+-----------------+
2 rows in set (0.15 sec)

B)
mysql> SELECT Reviewer_Name FROM Reviewer
    -> WHERE Reviewer_ID IN
    ->(SELECT Reviewer_ID FROM Rating
    -> GROUP BY  Rating.Reviewer_ID
    -> HAVING COUNT(*) >=3);
+-----------------+
| Reviewer_Name   |
+-----------------+
| Brittany Harris |
| Chris Jackson   |
+-----------------+
2 rows in set (0.08 sec)

C)
mysql> SELECT Reviewer_Name FROM Reviewer r1
    -> WHERE 3 <=ANY(SELECT COUNT(*) FROM Rating r2
    -> WHERE r1.Reviewer_ID =r2.Reviewer_ID);
+-----------------+
| Reviewer_Name   |
+-----------------+
| Brittany Harris |
| Chris Jackson   |
+-----------------+
2 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

10)
mysql> SELECT Title,AVG(stars) FROM Movie,Rating
    -> WHERE Movie.Movie_ID=Rating.Movie_ID
    -> GROUP BY Movie.Movie_ID
    -> ORDER BY AVG(stars) desc,Title ASC;
+-------------------------+------------+
| Title                   | AVG(stars) |
+-------------------------+------------+
| Snow White              |     4.5000 |
| Avatar                  |     4.0000 |
| Raiders of the Lost Ark |     3.3333 |
| Gone with the Wind      |     3.0000 |
| E.T.                    |     2.5000 |
| The Sound of Music      |     2.5000 |
+-------------------------+------------+
6 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

11)
mysql> DELETE FROM Rating
    -> WHERE Movie_ID IN(
    -> SELECT Movie_ID FROM Movie  WHERE Year < 1970 OR Year > 2000);
Query OK, 9 rows affected (0.78 sec)

mysql> SELECT *FROM Rating;
+-------------+----------+-------+-------------+
| Reviewer_ID | Movie_ID | stars | Rating_Date |
+-------------+----------+-------+-------------+
|         203 |      108 |     4 | 2011-01-12  |
|         203 |      108 |     2 | 2011-01-30  |
|         205 |      104 |     2 | 2011-01-22  |
|         205 |      108 |     4 | NULL        |
|         208 |      104 |     3 | 2011-01-02  |
+-------------+----------+-------+-------------+
5 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

12)
mysql> DELETE FROM Rating WHERE Rating_Date IS NULL;
Query OK, 1 row affected (0.21 sec)

mysql> SELECT *FROM Rating;
+-------------+----------+-------+-------------+
| Reviewer_ID | Movie_ID | stars | Rating_Date |
+-------------+----------+-------+-------------+
|         203 |      108 |     4 | 2011-01-12  |
|         203 |      108 |     2 | 2011-01-30  |
|         205 |      104 |     2 | 2011-01-22  |
|         208 |      104 |     3 | 2011-01-02  |
+-------------+----------+-------+-------------+
4 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

13)
mysql> INSERT INTO Rating
    -> (SELECT
    -> (SELECT Reviewer_ID FROM Reviewer  WHERE Reviewer_Name='James Cameron'),
    -> Movie_ID,5, NULL FROM Movie);
Query OK, 8 rows affected (0.17 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Rating;
+-------------+----------+-------+-------------+
| Reviewer_ID | Movie_ID | stars | Rating_Date |
+-------------+----------+-------+-------------+
|         203 |      108 |     4 | 2011-01-12  |
|         203 |      108 |     2 | 2011-01-30  |
|         205 |      104 |     2 | 2011-01-22  |
|         208 |      104 |     3 | 2011-01-02  |
|         207 |      101 |     5 | NULL        |
|         207 |      102 |     5 | NULL        |
|         207 |      103 |     5 | NULL        |
|         207 |      104 |     5 | NULL        |
|         207 |      105 |     5 | NULL        |
|         207 |      106 |     5 | NULL        |
|         207 |      107 |     5 | NULL        |
|         207 |      108 |     5 | NULL        |
+-------------+----------+-------+-------------+
12 rows in set (0.00 sec)

*******************************************************************************************************************************************************************

14)
mysql> UPDATE Movie SET
    ->  Year=Year + 25 where Movie_ID IN
    -> (SELECT Movie_ID FROM Rating
    -> GROUP BY Movie_ID having avg(stars) >= 4 );
Query OK, 6 rows affected (0.28 sec)
Rows matched: 6  Changed: 6  Warnings: 0

mysql> SELECT * FROM Movie;
+----------+-------------------------+------+------------------+
| MOVIE_ID | Title                   | Year | Directer         |
+----------+-------------------------+------+------------------+
|      101 | Gone with the Wind      | 1964 | Victor Fleming   |
|      102 | Star Wars               | 2002 | George Lucas     |
|      103 | The Sound of Music      | 1990 | Robert Wise      |
|      104 | E.T.                    | 1982 | Steven Spieibrg  |
|      105 | Titanic                 | 2022 | James Cameron    |
|      106 | Snow White              | 1962 | NULL             |
|      107 | Avatar                  | 2034 | James Cameron    |
|      108 | Raiders of the Lost Ark | 1981 | Steven Spielberg |
+----------+-------------------------+------+------------------+
8 rows in set (0.00 sec)
















































